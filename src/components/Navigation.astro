---
import { getLangFromUrl } from "../i18n/utils";
import { languages, defaultLanguage } from "../i18n/ui";
import { preprocessContent } from "../utils/preprocessContent";
import NavigationLink from "./NavigationLink.astro";

const currentLanguage = getLangFromUrl(Astro.url);

const pages = await preprocessContent();

const visiblePages = pages
  .flat()
  .filter(
    ({
      props: {
        content: { show_in_navigation },
        language,
      },
    }) => show_in_navigation && language === currentLanguage
  )
  .sort(
    (left, right) =>
      left.props.content.navigation_order - right.props.content.navigation_order
  )
  .map(
    ({
      props: {
        content: { slug, navigation_title },
        language,
      },
    }) => ({
      slug,
      navigation_title,
      language,
    })
  );

const otherlanguage = Object.keys(languages).filter(
  (language) => language !== currentLanguage
)[0];

const urlToOtherLanguage = () => {
  const currentPath = Astro.url.pathname;

  // || "" is needed if the page is home, otherwise it would be undefined and
  // the link would be broken
  const pathSegment =
    currentPath
      .replaceAll(currentLanguage, "")
      .split("/")
      .filter(Boolean)
      .slice(-1)[0] || "";

  if (currentLanguage !== defaultLanguage) {
    return "/" + pathSegment;
  }

  return "/" + [otherlanguage, pathSegment].join("/");
};
---

<nav>
  <button class="navigation-button">
    <u>Menu</u>
  </button>

  <div class="navigation-menu">
    <ul>
      {
        visiblePages.map((page) => (
          <NavigationLink slug={"/" + page.slug} label={page.navigation_title} />
        ))
      }
      <li>
        <br />
        <a href={urlToOtherLanguage()}>{languages[otherlanguage]}</a>
      </li>
    </ul>
  </div>
</nav>
